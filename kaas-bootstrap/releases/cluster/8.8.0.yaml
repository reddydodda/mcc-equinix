apiVersion: kaas.mirantis.com/v1alpha1
kind: ClusterRelease
metadata:
  name: mosk-8-8-0-22-3
spec:
  lcmType: ucp
  version: 8.8.0+22.3
  description: |
    kubernetes: v1.20.11
    containerd: 1.5.11
    docker-engine: ee-stable-20.10.11
    coredns: 1.7.0
    etcd: v3.4.16
    calico: v3.19.1
    openstack-operator: 0.9.7
    tungstenfabric-operator: 0.8.5
  releaseNotes:
  - version: 8.8.0+22.3
    notes:
    - text: Pre-caching TungstenFabric images during update
    - text: Avoid drop_caches operation hanging when reloading TungstenFabric vRouter
    - text: Adding Ubuntu 20.04 for greenfield MOSK deployments
    - text: Switch to auto generated default policies for OpenStack (tech preview)
    - text: Move secrets out of OpenStackDeployment CR
    - text: Ubuntu 18.04 updates
  allowedDistributions:
    - id: ubuntu/bionic
      version: "18.04~20220505124113"
      description: "Ubuntu 18.04 Bionic"
      image:
        url: bm/bin/efi/ubuntu/tgz-bionic-5.4-20220505124113
        checksum: a1d7e216bff4b8dbe27a974b49888432
    - id: ubuntu/focal
      version: "20.04~20220503164658"
      description: "Ubuntu 20.04 Focal"
      default: true
      image:
        url: bm/bin/efi/ubuntu/tgz-focal-20220503164658
        checksum: 7847ed988eae4fc2d14c68f40e4650bc
  helm:
    controller:
      name: helm-controller
      helmV3: true
      chartURL: core/helm/helm-controller-1.31.9.tgz
      version: 1.31.9
      namespace: kube-system
      values:
        helmControllerImage:
          tag: v0.3.0-239-gae7218ea
        tillerImage:
          tag: v2.16.11-40
    releases:
    - name: managed-lcm-api
      helmV3: true
      chartURL: core/helm/managed-lcm-api-1.31.9.tgz
      version: 1.31.9
      namespace: default
      values: { }
      required: true
    - name: metallb
      helmV3: true
      chartURL: core/helm/metallb-1.31.9.tgz
      version: 1.31.9
      namespace: metallb-system
      values: {}
    - name: stacklight
      helmV3: true
      chartURL: stacklight/helm/stacklight-0.6.1.tgz
      version: 0.6.1
      namespace: stacklight
      requiresPersistentVolumes: true
      requires:
      - local-volume-provisioner
      - managed-lcm-api
      localVolumes:
      - name: elasticsearch-data
        bindMounts:
        - volPerNode: 1
      - name: prometheus-data
        bindMounts:
        - volPerNode: 1
      - name: alertmanager-data
        bindMounts:
        - volPerNode: 1
      - name: postgresql-db
        bindMounts:
        - volPerNode: 2
      values:
        clusterSize: medium
        helmController:
          # NOTE(vsaienko): Openstack don't use helmbundles, but we still need
          # it to handle HelmBundles created for migration.
          dedicated: false
          image: lcm/lcm-controller:v0.3.0-239-gae7218ea
          tillerImage: lcm/helm/tiller:v2.16.11-40
        logging:
          enabled: false
        openstack:
          enabled: true
      required: true
    - name: ceph-controller
      chartURL: ceph/helm/ceph-operator-1.0.0-mcp-792.tgz
      version: 1.0.0-mcp-792
      helmV3: true
      namespace: ceph
      values:
        waitForOpenstackLock: true
      required: true
    - name: client-certificate-controller
      helmV3: true
      chartURL: core/helm/client-certificate-controller-1.31.9.tgz
      version: 1.31.9
      namespace: kaas
      values:
        image:
          tag: 1.31.9
      required: true
    - name: local-volume-provisioner
      helmV3: true
      chartURL: bm/helm/local-volume-provisioner-2.5.0-mcp.tgz
      version: 2.5.0-mcp
      namespace: kube-system
      values: {}
    - name: metrics-server
      helmV3: true
      chartURL: core/helm/metrics-server-1.31.9.tgz
      version: 1.31.9
      namespace: kube-system
      values:
        image:
          tag: v0.5.2
      required: true
    - name: storage-discovery
      helmV3: true
      chartURL: core/helm/storage-discovery-1.31.9.tgz
      version: 1.31.9
      namespace: storage-discovery
      values:
        image:
          tag: 1.31.9
    - name: openstack-operator
      helmV3: true
      chartURL: openstack/helm/openstack-controller/openstack-operator-0.9.7.tgz
      version: 0.9.7
      namespace: osh-system
      values:
        image:
          tag: 0.9.7
        node_maintenance:
          create_crd: false
      required: true
      requires:
      - local-volume-provisioner
      localVolumes:
      - name: bind-mounts
        bindMounts:
        # mariadb - 1 openstack-control-plane=enabled
        # etcd-coordination - 1 openstack-control-plane=enabled
        # redis-telemetry - 1 openstack-control-plane=enabled
        - volPerNode: 3
    - name: os-redis-operator
      helmV3: true
      chartURL: openstack/helm/redis-operator/redis-operator-3.1.6-mcp-4.tgz
      version: 3.1.6-mcp-4
      namespace: openstack-redis
      values:
        image:
          name: redis-operator
          repository: openstack/extra
          tag: v1.1.1-20220602142806
        cronjobs:
          redis_sts_status:
            image:
              tag: 0.9.6
        rbac:
          apiVersion: v1
          install: true
        node_affinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: openstack-control-plane
                operator: In
                values:
                - enabled
      required: true
      requires:
      - openstack-operator
    - name: tungstenfabric-operator
      helmV3: true
      chartURL: tungsten/helm/tungstenfabric-operator-0.8.5.tgz
      version: 0.8.5
      namespace: tf
      values:
        image:
          tag: 0.8.5
        node_maintenance:
          enabled: true
      required: true
      requiresPersistentVolumes: true
      requires:
        - local-volume-provisioner
      localVolumes:
        - name: bind-mounts
          bindMounts:
            # cassandra - 2 tfconfigdb=enabled;tfanalyticsdb=enabled
            # zookeeper - 2 tfconfigdb=enabled;tfanalyticsdb=enabled
            # kafka - 1     tfanalyticsdb=enabled
            # db backup/restore - 1
            - volPerNode: 6
  agent:
    version: v0.3.0-239-gae7218ea
    downloadURL: lcm/bin/lcm-agent/v0.3.0-239-gae7218ea/lcm-agent
    sha256: d9d1acf0145142c14b682c7b6fbed4460a29cd8b1344a274bcfc2e80a20ab4dd
  images:
    helmController: lcm/lcm-controller:v0.3.0-239-gae7218ea
    tiller: lcm/helm/tiller:v2.16.11-40
    ucpSourceRepo: lcm/docker
    ucpTargetRepo: mirantis
  machineTypes:
    worker:
    - &downloadLcmAnsible
      name: download lcm ansible
      params:
        path: /root/lcm-ansible-v0.16.0-13-gcac49ca
        url: lcm/bin/lcm-ansible/v0.16.0-13-gcac49ca/lcm-ansible.tar.gz
        sha256: 7b96fae33b9d473f4f3c7fc5d181467d753015946a41b650dc565228f2099f84
      runner: downloader
      version: "1"
      phase: prepare
    - &installProxy
      name: install proxy
      params:
        script: /root/lcm-ansible-v0.16.0-13-gcac49ca/install_proxy.sh
        kaas_ubuntu_repo: kaas/ubuntu-2022-05-03-013543
      runner: bash
      version: "1"
      phase: prepare
    - &setup
      name: setup
      params:
        script: /root/lcm-ansible-v0.16.0-13-gcac49ca/setup.sh
        kaas_ubuntu_repo: kaas/ubuntu-2022-05-03-013543
      runner: bash
      version: "1"
      phase: prepare
    - &preDownload
      name: pre download
      params:
        ansible: /usr/bin/ansible-playbook
        inventoryTemplate: /root/lcm-ansible-v0.16.0-13-gcac49ca/inventory/inventory-docker.tmpl
        playbook: /root/lcm-ansible-v0.16.0-13-gcac49ca/download_ucp.yml
        ucp_pre_pull_images: "true"
        openstack_deployment: "true"
        controlNodeIP: "{{ .ControlNodeIP }}"
        ucp_tag: 3.4.8
        dedicated_controlplane: "{{ .IsDedicatedMaster }}"
        containerd_version: 1.5.11
        docker_engine_version: "{ Debian: ee-stable-20.10.11, RedHat: ee-stable-20.10.11 }"
      phase: prepare
      runner: ansible
      version: "1"
    - &deploy
      name: deploy
      params:
        playbook: /root/lcm-ansible-v0.16.0-13-gcac49ca/reconcile.yml
        ansible: /usr/bin/ansible-playbook
        inventoryTemplate: /root/lcm-ansible-v0.16.0-13-gcac49ca/inventory/inventory-docker.tmpl
        openstack_deployment: "true"
        controlNodeIP: "{{ .ControlNodeIP }}"
        ucp_tag: 3.4.8
        dedicated_controlplane: "{{ .IsDedicatedMaster }}"
        containerd_version: 1.5.11
        docker_engine_version: "{ Debian: ee-stable-20.10.11, RedHat: ee-stable-20.10.11 }"
        ucp_custom_kube_controller_manager_flags: "--leader-elect-lease-duration=120s,--leader-elect-renew-deadline=60s"
        ucp_custom_kube_scheduler_flags: "--leader-elect-lease-duration=120s,--leader-elect-renew-deadline=60s"
        kubelet_max_pods: "150"
        upgrade_kernel_version: hwe
      runner: ansible
      version: "1"
      phase: deploy
    - &reconfigure
      name: reconfigure
      params:
        playbook: /root/lcm-ansible-v0.16.0-13-gcac49ca/reconfigure.yml
        ansible: /usr/bin/ansible-playbook
        inventoryTemplate: /root/lcm-ansible-v0.16.0-13-gcac49ca/inventory/inventory-docker.tmpl
        controlNodeIP: "{{ .ControlNodeIP }}"
        dedicated_controlplane: "{{ .IsDedicatedMaster }}"
      runner: ansible
      version: "1"
      phase: reconfigure
    control:
    - *downloadLcmAnsible
    - *installProxy
    - *setup
    - *preDownload
    - *deploy
    - *reconfigure
  allowedNodeLabels:
  - key: stacklight
    value: enabled
    displayName: Stacklight
  - key: openstack-control-plane
    value: enabled
    displayName: OpenStack control plane
  - key: openstack-compute-node
    value: enabled
    displayName: OpenStack compute
  - key: openstack-gateway
    value: enabled
    displayName: OpenStack gateway
  - key: openvswitch
    value: enabled
    displayName: Open vSwitch
  - key: tfanalytics
    value: enabled
    displayName: Tungsten Fabric Analytics
  - key: tfconfig
    value: enabled
    displayName: Tungsten Fabric Config
  - key: tfcontrol
    value: enabled
    displayName: Tungsten Fabric Control
  - key: tfwebui
    value: enabled
    displayName: Tungsten Fabric web UI
  - key: tfconfigdb
    value: enabled
    displayName: Tungsten Fabric Config database
  - key: tfanalyticsdb
    value: enabled
    displayName: Tungsten Fabric Analytics database
  - key: tfvrouter
    value: enabled
    displayName: Tungsten Fabric vRouter
  - key: node-type
    displayName: Node Type
