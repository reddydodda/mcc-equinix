apiVersion: kaas.mirantis.com/v1alpha1
kind: ClusterRelease
metadata:
  name: mke-13-3-1
spec:
  lcmType: byo
  version: 13.3.1+3.5.3
  description: |
    kubernetes: v1.21.3
    coredns: 1.7.0
    etcd: v3.4.16
    calico: v3.19.1
  releaseNotes:
  - version: 13.3.1-3.5.3
    notes:
    - text: MKE 3.5.3, Kubernetes v1.21.3
  helm:
    controller:
      name: helm-controller
      helmV3: true
      chartURL: core/helm/helm-controller-1.30.6.tgz
      version: 1.30.6
      namespace: kube-system
      values:
        helmControllerImage:
          tag: v0.3.0-239-gae7218ea
        tillerImage:
          tag: v2.16.11-40
    releases:
    - name: managed-lcm-api
      helmV3: true
      chartURL: core/helm/managed-lcm-api-1.30.6.tgz
      version: 1.30.6
      namespace: default
      values: {}
      required: true
    - name: stacklight
      helmV3: true
      chartURL: stacklight/helm/stacklight-0.6.1.tgz
      version: 0.6.1
      namespace: stacklight
      requiresPersistentVolumes: true
      requires:
      - local-volume-provisioner
      - managed-lcm-api
      localVolumes:
      - name: elasticsearch-data
        bindMounts:
        - volPerNode: 1
      - name: prometheus-data
        bindMounts:
        - volPerNode: 1
      - name: alertmanager-data
        bindMounts:
        - volPerNode: 1
      - name: postgresql-db
        bindMounts:
        - volPerNode: 2
      values:
        helmController:
          image: lcm/lcm-controller:v0.3.0-239-gae7218ea
          tillerImage: lcm/helm/tiller:v2.16.11-40
        logging:
          enabled: false
      required: true
    - name: client-certificate-controller
      helmV3: true
      chartURL: core/helm/client-certificate-controller-1.30.6.tgz
      version: 1.30.6
      namespace: kaas
      values:
        image:
          tag: 1.30.6
      required: true
    - name: local-volume-provisioner
      helmV3: true
      chartURL: bm/helm/local-volume-provisioner-2.5.0-mcp.tgz
      version: 2.5.0-mcp
      namespace: kube-system
      values: {}
    - name: metrics-server
      helmV3: true
      chartURL: core/helm/metrics-server-1.30.6.tgz
      version: 1.30.6
      namespace: kube-system
      values:
        image:
          tag: v0.5.2
      required: true
  agent:
    version: v0.3.0-239-gae7218ea
    downloadURL: lcm/bin/lcm-agent/v0.3.0-239-gae7218ea/lcm-agent
    sha256: d9d1acf0145142c14b682c7b6fbed4460a29cd8b1344a274bcfc2e80a20ab4dd
  images:
    helmController: lcm/lcm-controller:v0.3.0-239-gae7218ea
    tiller: lcm/helm/tiller:v2.16.11-40
    ucpSourceRepo: lcm/docker
    ucpTargetRepo: mirantis
  machineTypes:
    worker:
    - &downloadLcmAnsible
      name: download lcm ansible
      params:
        path: /root/lcm-ansible-v0.12.0-3-ga59afb4
        url: lcm/bin/lcm-ansible/v0.12.0-3-ga59afb4/lcm-ansible.tar.gz
        sha256: d2c1b202f6eecd46bcb607e09ce0d3940bd54c17bde54315798b38fe2e8bfc76
      runner: downloader
      version: "1"
      phase: prepare
    - &installProxy
      name: install proxy
      params:
        script: /root/lcm-ansible-v0.12.0-3-ga59afb4/install_proxy.sh
        kaas_ubuntu_repo: kaas/ubuntu-2020-07-30-013349
      runner: bash
      version: "1"
      phase: prepare
    - &setup
      name: setup
      params:
        script: /root/lcm-ansible-v0.12.0-3-ga59afb4/setup.sh
        kaas_ubuntu_repo: kaas/ubuntu-2020-07-30-013349
      runner: bash
      version: "1"
      phase: prepare
    - &preDownload
      name: pre download
      params:
        ansible: /usr/bin/ansible-playbook
        inventoryTemplate: /root/lcm-ansible-v0.12.0-3-ga59afb4/inventory/inventory-docker.tmpl
        playbook: /root/lcm-ansible-v0.12.0-3-ga59afb4/download_ucp.yml
        ucp_pre_pull_images: "true"
        controlNodeIP: "{{ .ControlNodeIP }}"
        ucp_tag: 3.5.3
        dedicated_controlplane: "{{ .IsDedicatedMaster }}"
        docker_engine_version: "{ Debian: ee-stable-20.10.6, RedHat: ee-stable-20.10.6 }"
      phase: prepare
      runner: ansible
      version: "1"
    - &deploy
      name: deploy
      params:
        playbook: /root/lcm-ansible-v0.12.0-3-ga59afb4/reconcile.yml
        ansible: /usr/bin/ansible-playbook
        inventoryTemplate: /root/lcm-ansible-v0.12.0-3-ga59afb4/inventory/inventory-docker.tmpl
        controlNodeIP: "{{ .ControlNodeIP }}"
        ucp_tag: 3.5.3
        dedicated_controlplane: "{{ .IsDedicatedMaster }}"
        docker_engine_version: "{ Debian: ee-stable-20.10.6, RedHat: ee-stable-20.10.6 }"
        ucp_custom_kube_controller_manager_flags: "--leader-elect-lease-duration=120s,--leader-elect-renew-deadline=60s"
        ucp_custom_kube_scheduler_flags: "--leader-elect-lease-duration=120s,--leader-elect-renew-deadline=60s"
      runner: ansible
      version: "1"
      phase: deploy
    control:
    - *downloadLcmAnsible
    - *installProxy
    - *setup
    - *preDownload
    - *deploy
  allowedNodeLabels:
  - key: stacklight
    value: enabled
    displayName: Stacklight
