apiVersion: kaas.mirantis.com/v1alpha1
kind: ClusterRelease
metadata:
  name: mke-11-3-0-3-5-3
spec:
  lcmType: ucp
  version: 11.3.0+3.5.3
  description: |
    kubernetes: v1.21.8
    containerd: 1.5.11
    docker-engine: ee-stable-20.10.11
    coredns: 1.7.0
    etcd: v3.4.16
    calico: v3.19.3
  releaseNotes:
  - version: 11.3.0
    notes:
    - text: MKE 3.5.3, Kubernetes v1.21.8
  allowedDistributions:
    - id: ubuntu/bionic
      version: "18.04~20220505124113"
      description: "Ubuntu 18.04 Bionic"
      image:
        url: bm/bin/efi/ubuntu/tgz-bionic-5.4-20220505124113
        checksum: a1d7e216bff4b8dbe27a974b49888432
    - id: ubuntu/focal
      version: "20.04~20220503164658"
      description: "Ubuntu 20.04 Focal"
      default: true
      image:
        url: bm/bin/efi/ubuntu/tgz-focal-20220503164658
        checksum: 7847ed988eae4fc2d14c68f40e4650bc
  helm:
    controller:
      name: helm-controller
      helmV3: true
      chartURL: core/helm/helm-controller-1.32.4.tgz
      version: 1.32.4
      namespace: kube-system
      values:
        helmControllerImage:
          tag: v0.3.0-257-ga93244da
    releases:
    - name: managed-lcm-api
      helmV3: true
      chartURL: core/helm/managed-lcm-api-1.32.4.tgz
      version: 1.32.4
      namespace: default
      values: {}
      required: true
    - name: metallb
      helmV3: true
      chartURL: core/helm/metallb-1.32.4.tgz
      version: 1.32.4
      namespace: metallb-system
      values: {}
    - name: stacklight
      helmV3: true
      chartURL: stacklight/helm/stacklight-0.7.2.tgz
      version: 0.7.2
      namespace: stacklight
      requiresPersistentVolumes: true
      requires:
      - local-volume-provisioner
      - managed-lcm-api
      localVolumes:
      - name: elasticsearch-data
        bindMounts:
        - volPerNode: 1
      - name: prometheus-data
        bindMounts:
        - volPerNode: 1
      - name: alertmanager-data
        bindMounts:
        - volPerNode: 1
      - name: postgresql-db
        bindMounts:
        - volPerNode: 2
      values:
        helmController:
          image: lcm/lcm-controller:v0.3.0-257-ga93244da
        logging:
          enabled: false
      required: true
    - name: ceph-controller
      chartURL: ceph/helm/ceph-operator-1.0.0-mcp-831.tgz
      version: 1.0.0-mcp-831
      helmV3: true
      namespace: ceph
      values:
        images:
          cephController:
            tag: v1.0.0-20220715144333
    - name: client-certificate-controller
      helmV3: true
      chartURL: core/helm/client-certificate-controller-1.32.4.tgz
      version: 1.32.4
      namespace: kaas
      values:
        image:
          tag: 1.32.4
      required: true
    - name: local-volume-provisioner
      helmV3: true
      chartURL: bm/helm/local-volume-provisioner-2.5.0-mcp.tgz
      version: 2.5.0-mcp
      namespace: kube-system
      values: {}
    - name: metrics-server
      helmV3: true
      chartURL: core/helm/metrics-server-1.32.4.tgz
      version: 1.32.4
      namespace: kube-system
      values:
        image:
          tag: v0.5.2
      required: true
    - name: storage-discovery
      helmV3: true
      chartURL: core/helm/storage-discovery-1.32.4.tgz
      version: 1.32.4
      namespace: storage-discovery
      values:
        image:
          tag: 1.32.4
  agent:
    version: v0.3.0-257-ga93244da
    downloadURL: lcm/bin/lcm-agent/v0.3.0-257-ga93244da/lcm-agent
    sha256: 6ddbd7265442bf2667b2b314fefc81a26c67f90f46bfca53ed43011840737823
  images:
    helmController: lcm/lcm-controller:v0.3.0-257-ga93244da
    tiller: lcm/helm/tiller:v2.16.11-40
    ucpSourceRepo: lcm/docker
    ucpTargetRepo: mirantis
  machineTypes:
    worker:
    - &downloadLcmAnsible
      name: download lcm ansible
      params:
        path: /root/lcm-ansible-v0.17.1-2-g1e337f8
        url: lcm/bin/lcm-ansible/v0.17.1-2-g1e337f8/lcm-ansible.tar.gz
        sha256: a55d1ff4a092fee5e44a105747e252588171e026c603ca8d8768d4b6aa7c2296
      runner: downloader
      version: "1"
      phase: prepare
    - &installProxy
      name: install proxy
      params:
        script: /root/lcm-ansible-v0.17.1-2-g1e337f8/install_proxy.sh
        kaas_ubuntu_repo: kaas/ubuntu-2022-05-03-013543
      runner: bash
      version: "1"
      phase: prepare
    - &setup
      name: setup
      params:
        script: /root/lcm-ansible-v0.17.1-2-g1e337f8/setup.sh
        kaas_ubuntu_repo: kaas/ubuntu-2022-05-03-013543
      runner: bash
      version: "1"
      phase: prepare
    - &preDownload
      name: pre download
      params:
        ansible: /usr/bin/ansible-playbook
        inventoryTemplate: /root/lcm-ansible-v0.17.1-2-g1e337f8/inventory/inventory-docker.tmpl
        playbook: /root/lcm-ansible-v0.17.1-2-g1e337f8/download_ucp.yml
        ucp_pre_pull_images: "true"
        controlNodeIP: "{{ .ControlNodeIP }}"
        ucp_tag: 3.5.3
        dedicated_controlplane: "{{ .IsDedicatedMaster }}"
        containerd_version: 1.5.11
        docker_engine_version: "{ Debian: ee-stable-20.10.11, RedHat: ee-stable-20.10.11 }"
      phase: prepare
      runner: ansible
      version: "1"
    - &deploy
      name: deploy
      params:
        playbook: /root/lcm-ansible-v0.17.1-2-g1e337f8/reconcile.yml
        ansible: /usr/bin/ansible-playbook
        inventoryTemplate: /root/lcm-ansible-v0.17.1-2-g1e337f8/inventory/inventory-docker.tmpl
        controlNodeIP: "{{ .ControlNodeIP }}"
        ucp_tag: 3.5.3
        dedicated_controlplane: "{{ .IsDedicatedMaster }}"
        containerd_version: 1.5.11
        docker_engine_version: "{ Debian: ee-stable-20.10.11, RedHat: ee-stable-20.10.11 }"
        ucp_custom_kube_controller_manager_flags: "--leader-elect-lease-duration=120s,--leader-elect-renew-deadline=60s"
        ucp_custom_kube_scheduler_flags: "--leader-elect-lease-duration=120s,--leader-elect-renew-deadline=60s"
        upgrade_kernel_version: hwe
      runner: ansible
      version: "1"
      phase: deploy
    - &reconfigure
      name: reconfigure
      params:
        playbook: /root/lcm-ansible-v0.17.1-2-g1e337f8/reconfigure.yml
        ansible: /usr/bin/ansible-playbook
        inventoryTemplate: /root/lcm-ansible-v0.17.1-2-g1e337f8/inventory/inventory-docker.tmpl
        controlNodeIP: "{{ .ControlNodeIP }}"
        dedicated_controlplane: "{{ .IsDedicatedMaster }}"
      runner: ansible
      version: "1"
      phase: reconfigure
    control:
    - *downloadLcmAnsible
    - *installProxy
    - *setup
    - *preDownload
    - *deploy
    - *reconfigure
  allowedNodeLabels:
  - key: stacklight
    value: enabled
    displayName: Stacklight
